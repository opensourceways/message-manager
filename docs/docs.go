// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/message_center/config//recipient/sync": {
            "post": {
                "description": "sync user info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "recipient"
                ],
                "summary": "SyncUserInfo",
                "parameters": [
                    {
                        "description": "syncUserInfoDTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.syncUserInfoDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/message_center/config/push": {
            "get": {
                "description": "get push config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_push"
                ],
                "summary": "GetPushConfig",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/app.MessagePushDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "update a push_config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_push"
                ],
                "summary": "UpdatePushConfig",
                "parameters": [
                    {
                        "description": "updatePushConfigDTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updatePushConfigDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "add a new push_config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_push"
                ],
                "summary": "AddPushConfig",
                "parameters": [
                    {
                        "description": "newPushConfigDTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.newPushConfigDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a push_config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_push"
                ],
                "summary": "RemovePushConfig",
                "parameters": [
                    {
                        "description": "deletePushConfigDTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.deletePushConfigDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/message_center/config/recipient": {
            "get": {
                "description": "get recipient config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "recipient"
                ],
                "summary": "GetRecipientConfig",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "update recipient config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "recipient"
                ],
                "summary": "UpdateRecipientConfig",
                "parameters": [
                    {
                        "description": "updateRecipientDTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateRecipientDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "add recipient config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "recipient"
                ],
                "summary": "AddRecipientConfig",
                "parameters": [
                    {
                        "description": "newRecipientDTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.newRecipientDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove recipient config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "recipient"
                ],
                "summary": "RemoveRecipientConfig",
                "parameters": [
                    {
                        "description": "updateRecipientDTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateRecipientDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/message_center/config/subs": {
            "get": {
                "description": "get subscribe_config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_subscribe"
                ],
                "summary": "GetSubsConfig",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "add a subscribe_config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_subscribe"
                ],
                "summary": "AddSubsConfig",
                "parameters": [
                    {
                        "description": "newSubscribeDTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.newSubscribeDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a subscribe_config by source and type",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_subscribe"
                ],
                "summary": "RemoveSubsConfig",
                "parameters": [
                    {
                        "description": "deleteSubscribeDTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.deleteSubscribeDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/message_center/config/subs/all": {
            "get": {
                "description": "get all subscribe_config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_subscribe"
                ],
                "summary": "GetAllSubsConfig",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/app.MessageSubscribeDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/message_center/config/subs_new": {
            "post": {
                "description": "save custom filter",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_subscribe"
                ],
                "summary": "SaveFilter",
                "parameters": [
                    {
                        "description": "subscribeDTO",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.subscribeDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/message_center/inner": {
            "get": {
                "description": "get inner message",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_center"
                ],
                "summary": "GetInnerMessage",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/app.MessageListDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "set message read",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_center"
                ],
                "summary": "SetMessageIsRead",
                "parameters": [
                    {
                        "description": "messageStatus",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.messageStatus"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove message",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_center"
                ],
                "summary": "RemoveMessage",
                "parameters": [
                    {
                        "description": "messageStatus",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.messageStatus"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/message_center/inner/count": {
            "get": {
                "description": "get unread inner message count",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_center"
                ],
                "summary": "CountAllUnReadMessage",
                "responses": {
                    "202": {
                        "description": "成功响应",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "未授权",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "系统错误",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/message_center/inner_quick": {
            "get": {
                "description": "get inner message by filter",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "message_center"
                ],
                "summary": "GetInnerMessageQuick",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/app.MessageListDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.MessageListDTO": {
            "type": "object",
            "properties": {
                "data_content_type": {
                    "type": "string"
                },
                "data_schema": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "is_read": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "source_group": {
                    "type": "string"
                },
                "source_url": {
                    "type": "string"
                },
                "spec_version": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "app.MessagePushDTO": {
            "type": "object",
            "properties": {
                "need_inner_message": {
                    "type": "boolean"
                },
                "need_mail": {
                    "type": "boolean"
                },
                "need_message": {
                    "type": "boolean"
                },
                "need_phone": {
                    "type": "boolean"
                },
                "recipient_id": {
                    "type": "integer"
                },
                "subscribe_id": {
                    "type": "integer"
                }
            }
        },
        "app.MessageSubscribeDTO": {
            "type": "object",
            "properties": {
                "event_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_default": {
                    "type": "boolean"
                },
                "mode_name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "spec_version": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "controller.deletePushConfigDTO": {
            "type": "object",
            "properties": {
                "recipient_id": {
                    "type": "integer"
                },
                "subscribe_id": {
                    "type": "integer"
                }
            }
        },
        "controller.deleteSubscribeDTO": {
            "type": "object",
            "properties": {
                "event_type": {
                    "type": "string"
                },
                "mode_name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "controller.messageStatus": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "controller.newPushConfigDTO": {
            "type": "object",
            "properties": {
                "need_inner_message": {
                    "type": "boolean"
                },
                "need_mail": {
                    "type": "boolean"
                },
                "need_message": {
                    "type": "boolean"
                },
                "need_phone": {
                    "type": "boolean"
                },
                "recipient_id": {
                    "type": "integer"
                },
                "subscribe_id": {
                    "type": "integer"
                }
            }
        },
        "controller.newRecipientDTO": {
            "type": "object",
            "properties": {
                "mail": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "recipient_id": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                }
            }
        },
        "controller.newSubscribeDTO": {
            "type": "object",
            "properties": {
                "event_type": {
                    "type": "string"
                },
                "mode_name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "spec_version": {
                    "type": "string"
                }
            }
        },
        "controller.subscribeDTO": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "build_creator": {
                    "type": "string"
                },
                "build_env": {
                    "type": "string"
                },
                "build_owner": {
                    "type": "string"
                },
                "build_status": {
                    "type": "string"
                },
                "count_per_page": {
                    "type": "integer"
                },
                "cve_affected": {
                    "type": "string"
                },
                "cve_component": {
                    "type": "string"
                },
                "cve_state": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "event_type": {
                    "type": "string"
                },
                "is_bot": {
                    "type": "string"
                },
                "is_read": {
                    "type": "string"
                },
                "issue_assignee": {
                    "type": "string"
                },
                "issue_creator": {
                    "type": "string"
                },
                "issue_state": {
                    "type": "string"
                },
                "key_word": {
                    "type": "string"
                },
                "meeting_action": {
                    "type": "string"
                },
                "meeting_end_time": {
                    "type": "string"
                },
                "meeting_sig": {
                    "type": "string"
                },
                "meeting_start_time": {
                    "type": "string"
                },
                "mode_name": {
                    "type": "string"
                },
                "my_management": {
                    "type": "string"
                },
                "my_sig": {
                    "type": "string"
                },
                "note_type": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pr_assignee": {
                    "type": "string"
                },
                "pr_creator": {
                    "type": "string"
                },
                "pr_state": {
                    "type": "string"
                },
                "repos": {
                    "type": "string"
                },
                "sig": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "spec_version": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "controller.syncUserInfoDTO": {
            "type": "object",
            "properties": {
                "country_code": {
                    "type": "string"
                },
                "gitee_user_name": {
                    "type": "string"
                },
                "mail": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "controller.updatePushConfigDTO": {
            "type": "object",
            "properties": {
                "need_inner_message": {
                    "type": "boolean"
                },
                "need_mail": {
                    "type": "boolean"
                },
                "need_message": {
                    "type": "boolean"
                },
                "need_phone": {
                    "type": "boolean"
                },
                "recipient_id": {
                    "type": "string"
                },
                "subscribe_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "controller.updateRecipientDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "mail": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "recipient_id": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Message Manager",
	Description:      "This is a Message Manager Server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
